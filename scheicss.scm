;; https://codeberg.org/naori/scheicss

(use-modules (ice-9 textual-ports)
	     (ice-9 string-fun))

;; Content is a list of attributes, or a single attribute
(define (make-element element content)
  (string-concatenate (list
		       element " {\n"
		       ;; If a list of attributes, concatenate all
		       (if (list? content)
			   (string-concatenate content)
			   content)
		       "}\n")))
(define (make-attribute name value)
  (string-concatenate (list "\t" name ": " value ";\n")))
(define (id name . content)
  (string-concatenate (list "#" (make-element name content))))
(define (class name . content)
  (string-concatenate (list "." (make-element name content))))
(define (defvar name value)
  (string-concatenate (list "--" name ": " value ";\n")))
(define (getvar name)
  (string-concatenate (list "var(--" name ");\n")))

(define (pseudo-element element pseudo)
  (string-replace-substring
   element
   " {"
   (string-concatenate (list "::" pseudo " {"))))
(define (pseudo-class element pseudo)
  (string-replace-substring
   element
   " {"
   (string-concatenate (list ":" pseudo " {"))))

(define (generate-css . ls)
  (string-concatenate ls))

(define (write-style filename . style)
  (call-with-output-file filename
    (lambda (port)
      (put-string port (string-concatenate style)))))

(define (accent-color value) (make-attribute "accent-color" value))
(define (align-content value) (make-attribute "align-content" value))
(define (align-items value) (make-attribute "align-items" value))
(define (align-self value) (make-attribute "align-self" value))
(define (all value) (make-attribute "all" value))
(define (animation value) (make-attribute "animation" value))
(define (animation-delay value) (make-attribute "animation-delay" value))
(define (animation-direction value) (make-attribute "animation-direction" value))
(define (animation-duration value) (make-attribute "animation-duration" value))
(define (animation-fill-mode value) (make-attribute "animation-fill-mode" value))
(define (animation-iteration-count value) (make-attribute "animation-iteration-count" value))
(define (animation-name value) (make-attribute "animation-name" value))
(define (animation-play-state value) (make-attribute "animation-play-state" value))
(define (animation-timing-function value) (make-attribute "animation-timing-function" value))
(define (aspect-ratio value) (make-attribute "aspect-ratio" value))
(define (backdrop-filter value) (make-attribute "backdrop-filter" value))
(define (backface-visibility value) (make-attribute "backface-visibility" value))
(define (background value) (make-attribute "background" value))
(define (background-attachment value) (make-attribute "background-attachment" value))
(define (background-blend-mode value) (make-attribute "background-blend-mode" value))
(define (background-clip value) (make-attribute "background-clip" value))
(define (background-color value) (make-attribute "background-color" value))
(define (background-image value) (make-attribute "background-image" value))
(define (background-origin value) (make-attribute "background-origin" value))
(define (background-position value) (make-attribute "background-position" value))
(define (background-position-x value) (make-attribute "background-position-x" value))
(define (background-position-y value) (make-attribute "background-position-y" value))
(define (background-repeat value) (make-attribute "background-repeat" value))
(define (background-size value) (make-attribute "background-size" value))
(define (block-size value) (make-attribute "block-size" value))
(define (border value) (make-attribute "border" value))
(define (border-block value) (make-attribute "border-block" value))
(define (border-block-color value) (make-attribute "border-block-color" value))
(define (border-block-end-color value) (make-attribute "border-block-end-color" value))
(define (border-block-end-style value) (make-attribute "border-block-end-style" value))
(define (border-block-end-width value) (make-attribute "border-block-end-width" value))
(define (border-block-start-color value) (make-attribute "border-block-start-color" value))
(define (border-block-start-style value) (make-attribute "border-block-start-style" value))
(define (border-block-start-width value) (make-attribute "border-block-start-width" value))
(define (border-block-style value) (make-attribute "border-block-style" value))
(define (border-block-width value) (make-attribute "border-block-width" value))
(define (border-bottom value) (make-attribute "border-bottom" value))
(define (border-bottom-color value) (make-attribute "border-bottom-color" value))
(define (border-bottom-left-radius value) (make-attribute "border-bottom-left-radius" value))
(define (border-bottom-right-radius value) (make-attribute "border-bottom-right-radius" value))
(define (border-bottom-style value) (make-attribute "border-bottom-style" value))
(define (border-bottom-width value) (make-attribute "border-bottom-width" value))
(define (border-collapse value) (make-attribute "border-collapse" value))
(define (border-color value) (make-attribute "border-color" value))
(define (border-image value) (make-attribute "border-image" value))
(define (border-image-outset value) (make-attribute "border-image-outset" value))
(define (border-image-repeat value) (make-attribute "border-image-repeat" value))
(define (border-image-slice value) (make-attribute "border-image-slice" value))
(define (border-image-source value) (make-attribute "border-image-source" value))
(define (border-image-width value) (make-attribute "border-image-width" value))
(define (border-inline value) (make-attribute "border-inline" value))
(define (border-inline-color value) (make-attribute "border-inline-color" value))
(define (border-inline-end-color value) (make-attribute "border-inline-end-color" value))
(define (border-inline-end-style value) (make-attribute "border-inline-end-style" value))
(define (border-inline-end-width value) (make-attribute "border-inline-end-width" value))
(define (border-inline-start-color value) (make-attribute "border-inline-start-color" value))
(define (border-inline-start-style value) (make-attribute "border-inline-start-style" value))
(define (border-inline-start-width value) (make-attribute "border-inline-start-width" value))
(define (border-inline-style value) (make-attribute "border-inline-style" value))
(define (border-inline-width value) (make-attribute "border-inline-width" value))
(define (border-left value) (make-attribute "border-left" value))
(define (border-left-color value) (make-attribute "border-left-color" value))
(define (border-left-style value) (make-attribute "border-left-style" value))
(define (border-left-width value) (make-attribute "border-left-width" value))
(define (border-radius value) (make-attribute "border-radius" value))
(define (border-right value) (make-attribute "border-right" value))
(define (border-right-color value) (make-attribute "border-right-color" value))
(define (border-right-style value) (make-attribute "border-right-style" value))
(define (border-right-width value) (make-attribute "border-right-width" value))
(define (border-spacing value) (make-attribute "border-spacing" value))
(define (border-style value) (make-attribute "border-style" value))
(define (border-top value) (make-attribute "border-top" value))
(define (border-top-color value) (make-attribute "border-top-color" value))
(define (border-top-left-radius value) (make-attribute "border-top-left-radius" value))
(define (border-top-right-radius value) (make-attribute "border-top-right-radius" value))
(define (border-top-style value) (make-attribute "border-top-style" value))
(define (border-top-width value) (make-attribute "border-top-width" value))
(define (border-width value) (make-attribute "border-width" value))
(define (bottom value) (make-attribute "bottom" value))
(define (box-decoration-break value) (make-attribute "box-decoration-break" value))
(define (box-reflect value) (make-attribute "box-reflect" value))
(define (box-shadow value) (make-attribute "box-shadow" value))
(define (box-sizing value) (make-attribute "box-sizing" value))
(define (break-after value) (make-attribute "break-after" value))
(define (break-before value) (make-attribute "break-before" value))
(define (break-inside value) (make-attribute "break-inside" value))
(define (caption-side value) (make-attribute "caption-side" value))
(define (caret-color value) (make-attribute "caret-color" value))
(define (@charset value) (make-attribute "@charset" value))
(define (clear value) (make-attribute "clear" value))
(define (clip value) (make-attribute "clip" value))
(define (color value) (make-attribute "color" value))
(define (column-count value) (make-attribute "column-count" value))
(define (column-fill value) (make-attribute "column-fill" value))
(define (column-gap value) (make-attribute "column-gap" value))
(define (column-rule value) (make-attribute "column-rule" value))
(define (column-rule-color value) (make-attribute "column-rule-color" value))
(define (column-rule-style value) (make-attribute "column-rule-style" value))
(define (column-rule-width value) (make-attribute "column-rule-width" value))
(define (column-span value) (make-attribute "column-span" value))
(define (column-width value) (make-attribute "column-width" value))
(define (columns value) (make-attribute "columns" value))
(define (content value) (make-attribute "content" value))
(define (counter-increment value) (make-attribute "counter-increment" value))
(define (counter-reset value) (make-attribute "counter-reset" value))
(define (cursor value) (make-attribute "cursor" value))
(define (direction value) (make-attribute "direction" value))
(define (display value) (make-attribute "display" value))
(define (empty-cells value) (make-attribute "empty-cells" value))
(define (filter value) (make-attribute "filter" value))
(define (flex value) (make-attribute "flex" value))
(define (flex-basis value) (make-attribute "flex-basis" value))
(define (flex-direction value) (make-attribute "flex-direction" value))
(define (flex-flow value) (make-attribute "flex-flow" value))
(define (flex-grow value) (make-attribute "flex-grow" value))
(define (flex-shrink value) (make-attribute "flex-shrink" value))
(define (flex-wrap value) (make-attribute "flex-wrap" value))
(define (float value) (make-attribute "float" value))
(define (font value) (make-attribute "font" value))
(define (@font-face value) (make-attribute "@font-face" value))
(define (font-family value) (make-attribute "font-family" value))
(define (font-feature-settings value) (make-attribute "font-feature-settings" value))
(define (@font-feature-values value) (make-attribute "@font-feature-values" value))
(define (font-kerning value) (make-attribute "font-kerning" value))
(define (font-language-override value) (make-attribute "font-language-override" value))
(define (font-size value) (make-attribute "font-size" value))
(define (font-size-adjust value) (make-attribute "font-size-adjust" value))
(define (font-stretch value) (make-attribute "font-stretch" value))
(define (font-style value) (make-attribute "font-style" value))
(define (font-synthesis value) (make-attribute "font-synthesis" value))
(define (font-variant value) (make-attribute "font-variant" value))
(define (font-variant-alternates value) (make-attribute "font-variant-alternates" value))
(define (font-variant-caps value) (make-attribute "font-variant-caps" value))
(define (font-variant-east-asian value) (make-attribute "font-variant-east-asian" value))
(define (font-variant-ligatures value) (make-attribute "font-variant-ligatures" value))
(define (font-variant-numeric value) (make-attribute "font-variant-numeric" value))
(define (font-variant-position value) (make-attribute "font-variant-position" value))
(define (font-weight value) (make-attribute "font-weight" value))
(define (gap value) (make-attribute "gap" value))
(define (grid value) (make-attribute "grid" value))
(define (grid-area value) (make-attribute "grid-area" value))
(define (grid-auto-columns value) (make-attribute "grid-auto-columns" value))
(define (grid-auto-flow value) (make-attribute "grid-auto-flow" value))
(define (grid-auto-rows value) (make-attribute "grid-auto-rows" value))
(define (grid-column value) (make-attribute "grid-column" value))
(define (grid-column-end value) (make-attribute "grid-column-end" value))
(define (grid-column-gap value) (make-attribute "grid-column-gap" value))
(define (grid-column-start value) (make-attribute "grid-column-start" value))
(define (grid-gap value) (make-attribute "grid-gap" value))
(define (grid-row value) (make-attribute "grid-row" value))
(define (grid-row-end value) (make-attribute "grid-row-end" value))
(define (grid-row-gap value) (make-attribute "grid-row-gap" value))
(define (grid-row-start value) (make-attribute "grid-row-start" value))
(define (grid-template value) (make-attribute "grid-template" value))
(define (grid-template-areas value) (make-attribute "grid-template-areas" value))
(define (grid-template-columns value) (make-attribute "grid-template-columns" value))
(define (grid-template-rows value) (make-attribute "grid-template-rows" value))
(define (hanging-punctuation value) (make-attribute "hanging-punctuation" value))
(define (height value) (make-attribute "height" value))
(define (hyphens value) (make-attribute "hyphens" value))
(define (image-rendering value) (make-attribute "image-rendering" value))
(define (@import value) (make-attribute "@import" value))
(define (inline-size value) (make-attribute "inline-size" value))
(define (inset value) (make-attribute "inset" value))
(define (inset-block value) (make-attribute "inset-block" value))
(define (inset-block-end value) (make-attribute "inset-block-end" value))
(define (inset-block-start value) (make-attribute "inset-block-start" value))
(define (inset-inline value) (make-attribute "inset-inline" value))
(define (inset-inline-end value) (make-attribute "inset-inline-end" value))
(define (inset-inline-start value) (make-attribute "inset-inline-start" value))
(define (isolation value) (make-attribute "isolation" value))
(define (justify-content value) (make-attribute "justify-content" value))
(define (justify-items value) (make-attribute "justify-items" value))
(define (justify-self value) (make-attribute "justify-self" value))
(define (@keyframes value) (make-attribute "@keyframes" value))
(define (left value) (make-attribute "left" value))
(define (letter-spacing value) (make-attribute "letter-spacing" value))
(define (line-break value) (make-attribute "line-break" value))
(define (line-height value) (make-attribute "line-height" value))
(define (list-style value) (make-attribute "list-style" value))
(define (list-style-image value) (make-attribute "list-style-image" value))
(define (list-style-position value) (make-attribute "list-style-position" value))
(define (list-style-type value) (make-attribute "list-style-type" value))
(define (margin value) (make-attribute "margin" value))
(define (margin-block value) (make-attribute "margin-block" value))
(define (margin-block-end value) (make-attribute "margin-block-end" value))
(define (margin-block-start value) (make-attribute "margin-block-start" value))
(define (margin-bottom value) (make-attribute "margin-bottom" value))
(define (margin-inline value) (make-attribute "margin-inline" value))
(define (margin-inline-end value) (make-attribute "margin-inline-end" value))
(define (margin-inline-start value) (make-attribute "margin-inline-start" value))
(define (margin-left value) (make-attribute "margin-left" value))
(define (margin-right value) (make-attribute "margin-right" value))
(define (margin-top value) (make-attribute "margin-top" value))
(define (mask value) (make-attribute "mask" value))
(define (mask-clip value) (make-attribute "mask-clip" value))
(define (mask-composite value) (make-attribute "mask-composite" value))
(define (mask-image value) (make-attribute "mask-image" value))
(define (mask-mode value) (make-attribute "mask-mode" value))
(define (mask-origin value) (make-attribute "mask-origin" value))
(define (mask-position value) (make-attribute "mask-position" value))
(define (mask-repeat value) (make-attribute "mask-repeat" value))
(define (mask-size value) (make-attribute "mask-size" value))
(define (mask-type value) (make-attribute "mask-type" value))
(define (max-height value) (make-attribute "max-height" value))
(define (max-width value) (make-attribute "max-width" value))
(define (@media value) (make-attribute "@media" value))
(define (max-block-size value) (make-attribute "max-block-size" value))
(define (max-inline-size value) (make-attribute "max-inline-size" value))
(define (min-block-size value) (make-attribute "min-block-size" value))
(define (min-inline-size value) (make-attribute "min-inline-size" value))
(define (min-height value) (make-attribute "min-height" value))
(define (min-width value) (make-attribute "min-width" value))
(define (mix-blend-mode value) (make-attribute "mix-blend-mode" value))
(define (object-fit value) (make-attribute "object-fit" value))
(define (object-position value) (make-attribute "object-position" value))
(define (offset value) (make-attribute "offset" value))
(define (offset-anchor value) (make-attribute "offset-anchor" value))
(define (offset-distance value) (make-attribute "offset-distance" value))
(define (offset-path value) (make-attribute "offset-path" value))
(define (offset-rotate value) (make-attribute "offset-rotate" value))
(define (opacity value) (make-attribute "opacity" value))
(define (order value) (make-attribute "order" value))
(define (orphans value) (make-attribute "orphans" value))
(define (outline value) (make-attribute "outline" value))
(define (outline-color value) (make-attribute "outline-color" value))
(define (outline-offset value) (make-attribute "outline-offset" value))
(define (outline-style value) (make-attribute "outline-style" value))
(define (outline-width value) (make-attribute "outline-width" value))
(define (overflow value) (make-attribute "overflow" value))
(define (overflow-anchor value) (make-attribute "overflow-anchor" value))
(define (overflow-wrap value) (make-attribute "overflow-wrap" value))
(define (overflow-x value) (make-attribute "overflow-x" value))
(define (overflow-y value) (make-attribute "overflow-y" value))
(define (overscroll-behavior value) (make-attribute "overscroll-behavior" value))
(define (overscroll-behavior-block value) (make-attribute "overscroll-behavior-block" value))
(define (overscroll-behavior-inline value) (make-attribute "overscroll-behavior-inline" value))
(define (overscroll-behavior-x value) (make-attribute "overscroll-behavior-x" value))
(define (overscroll-behavior-y value) (make-attribute "overscroll-behavior-y" value))
(define (padding value) (make-attribute "padding" value))
(define (padding-block value) (make-attribute "padding-block" value))
(define (padding-block-end value) (make-attribute "padding-block-end" value))
(define (padding-block-start value) (make-attribute "padding-block-start" value))
(define (padding-bottom value) (make-attribute "padding-bottom" value))
(define (padding-inline value) (make-attribute "padding-inline" value))
(define (padding-inline-end value) (make-attribute "padding-inline-end" value))
(define (padding-inline-start value) (make-attribute "padding-inline-start" value))
(define (padding-left value) (make-attribute "padding-left" value))
(define (padding-right value) (make-attribute "padding-right" value))
(define (padding-top value) (make-attribute "padding-top" value))
(define (page-break-after value) (make-attribute "page-break-after" value))
(define (page-break-before value) (make-attribute "page-break-before" value))
(define (page-break-inside value) (make-attribute "page-break-inside" value))
(define (paint-order value) (make-attribute "paint-order" value))
(define (perspective value) (make-attribute "perspective" value))
(define (perspective-origin value) (make-attribute "perspective-origin" value))
(define (place-content value) (make-attribute "place-content" value))
(define (place-items value) (make-attribute "place-items" value))
(define (place-self value) (make-attribute "place-self" value))
(define (pointer-events value) (make-attribute "pointer-events" value))
(define (position value) (make-attribute "position" value))
(define (quotes value) (make-attribute "quotes" value))
(define (resize value) (make-attribute "resize" value))
(define (right value) (make-attribute "right" value))
(define (rotate value) (make-attribute "rotate" value))
(define (row-gap value) (make-attribute "row-gap" value))
(define (scale value) (make-attribute "scale" value))
(define (scroll-behavior value) (make-attribute "scroll-behavior" value))
(define (scroll-margin value) (make-attribute "scroll-margin" value))
(define (scroll-margin-block value) (make-attribute "scroll-margin-block" value))
(define (scroll-margin-block-end value) (make-attribute "scroll-margin-block-end" value))
(define (scroll-margin-block-start value) (make-attribute "scroll-margin-block-start" value))
(define (scroll-margin-bottom value) (make-attribute "scroll-margin-bottom" value))
(define (scroll-margin-inline value) (make-attribute "scroll-margin-inline" value))
(define (scroll-margin-inline-end value) (make-attribute "scroll-margin-inline-end" value))
(define (scroll-margin-inline-start value) (make-attribute "scroll-margin-inline-start" value))
(define (scroll-margin-left value) (make-attribute "scroll-margin-left" value))
(define (scroll-margin-right value) (make-attribute "scroll-margin-right" value))
(define (scroll-margin-top value) (make-attribute "scroll-margin-top" value))
(define (scroll-padding value) (make-attribute "scroll-padding" value))
(define (scroll-padding-block value) (make-attribute "scroll-padding-block" value))
(define (scroll-padding-block-end value) (make-attribute "scroll-padding-block-end" value))
(define (scroll-padding-block-start value) (make-attribute "scroll-padding-block-start" value))
(define (scroll-padding-bottom value) (make-attribute "scroll-padding-bottom" value))
(define (scroll-padding-inline value) (make-attribute "scroll-padding-inline" value))
(define (scroll-padding-inline-end value) (make-attribute "scroll-padding-inline-end" value))
(define (scroll-padding-inline-start value) (make-attribute "scroll-padding-inline-start" value))
(define (scroll-padding-left value) (make-attribute "scroll-padding-left" value))
(define (scroll-padding-right value) (make-attribute "scroll-padding-right" value))
(define (scroll-padding-top value) (make-attribute "scroll-padding-top" value))
(define (scroll-snap-align value) (make-attribute "scroll-snap-align" value))
(define (scroll-snap-stop value) (make-attribute "scroll-snap-stop" value))
(define (scroll-snap-type value) (make-attribute "scroll-snap-type" value))
(define (tab-size value) (make-attribute "tab-size" value))
(define (table-layout value) (make-attribute "table-layout" value))
(define (text-align value) (make-attribute "text-align" value))
(define (text-align-last value) (make-attribute "text-align-last" value))
(define (text-combine-upright value) (make-attribute "text-combine-upright" value))
(define (text-decoration value) (make-attribute "text-decoration" value))
(define (text-decoration-color value) (make-attribute "text-decoration-color" value))
(define (text-decoration-line value) (make-attribute "text-decoration-line" value))
(define (text-decoration-style value) (make-attribute "text-decoration-style" value))
(define (text-decoration-thickness value) (make-attribute "text-decoration-thickness" value))
(define (text-emphasis value) (make-attribute "text-emphasis" value))
(define (text-indent value) (make-attribute "text-indent" value))
(define (text-justify value) (make-attribute "text-justify" value))
(define (text-orientation value) (make-attribute "text-orientation" value))
(define (text-overflow value) (make-attribute "text-overflow" value))
(define (text-shadow value) (make-attribute "text-shadow" value))
(define (text-transform value) (make-attribute "text-transform" value))
(define (text-underline-position value) (make-attribute "text-underline-position" value))
(define (top value) (make-attribute "top" value))
(define (transform value) (make-attribute "transform" value))
(define (transform-origin value) (make-attribute "transform-origin" value))
(define (transform-style value) (make-attribute "transform-style" value))
(define (transition value) (make-attribute "transition" value))
(define (transition-delay value) (make-attribute "transition-delay" value))
(define (transition-duration value) (make-attribute "transition-duration" value))
(define (transition-property value) (make-attribute "transition-property" value))
(define (transition-timing-function value) (make-attribute "transition-timing-function" value))
(define (translate value) (make-attribute "translate" value))
(define (unicode-bidi value) (make-attribute "unicode-bidi" value))
(define (user-select value) (make-attribute "user-select" value))
(define (vertical-align value) (make-attribute "vertical-align" value))
(define (visibility value) (make-attribute "visibility" value))
(define (white-space value) (make-attribute "white-space" value))
(define (widows value) (make-attribute "widows" value))
(define (width value) (make-attribute "width" value))
(define (word-break value) (make-attribute "word-break" value))
(define (word-spacing value) (make-attribute "word-spacing" value))
(define (word-wrap value) (make-attribute "word-wrap" value))
(define (writing-mode value) (make-attribute "writing-mode" value))
(define (z-index value) (make-attribute "z-index" value))
(define (a . content) (make-element "a" content))
(define (abbr . content) (make-element "abbr" content))
(define (acronym . content) (make-element "acronym" content))
(define (address . content) (make-element "address" content))
(define (applet . content) (make-element "applet" content))
(define (area . content) (make-element "area" content))
(define (article . content) (make-element "article" content))
(define (aside . content) (make-element "aside" content))
(define (audio . content) (make-element "audio" content))
(define (b . content) (make-element "b" content))
(define (base . content) (make-element "base" content))
(define (basefont . content) (make-element "basefont" content))
(define (bdi . content) (make-element "bdi" content))
(define (bdo . content) (make-element "bdo" content))
(define (big . content) (make-element "big" content))
(define (blockquote . content) (make-element "blockquote" content))
(define (body . content) (make-element "body" content))
(define (br . content) (make-element "br" content))
(define (button . content) (make-element "button" content))
(define (canvas . content) (make-element "canvas" content))
(define (caption . content) (make-element "caption" content))
(define (center . content) (make-element "center" content))
(define (cite . content) (make-element "cite" content))
(define (code . content) (make-element "code" content))
(define (col . content) (make-element "col" content))
(define (colgroup . content) (make-element "colgroup" content))
(define (data . content) (make-element "data" content))
(define (datalist . content) (make-element "datalist" content))
(define (dd . content) (make-element "dd" content))
(define (del . content) (make-element "del" content))
(define (details . content) (make-element "details" content))
(define (dfn . content) (make-element "dfn" content))
(define (dialog . content) (make-element "dialog" content))
(define (dir . content) (make-element "dir" content))
(define (div . content) (make-element "div" content))
(define (dl . content) (make-element "dl" content))
(define (dt . content) (make-element "dt" content))
(define (em . content) (make-element "em" content))
(define (embed . content) (make-element "embed" content))
(define (fieldset . content) (make-element "fieldset" content))
(define (figcaption . content) (make-element "figcaption" content))
(define (figure . content) (make-element "figure" content))
;; (define (font . content) (make-element "font" content))
(define (footer . content) (make-element "footer" content))
(define (form . content) (make-element "form" content))
(define (frame . content) (make-element "frame" content))
(define (frameset . content) (make-element "frameset" content))
(define (h1 . content) (make-element "h1" content))
(define (head . content) (make-element "head" content))
(define (header . content) (make-element "header" content))
(define (hr . content) (make-element "hr" content))
(define (html . content) (make-element "html" content))
(define (i . content) (make-element "i" content))
(define (iframe . content) (make-element "iframe" content))
(define (img . content) (make-element "img" content))
(define (input . content) (make-element "input" content))
(define (ins . content) (make-element "ins" content))
(define (kbd . content) (make-element "kbd" content))
(define (label . content) (make-element "label" content))
(define (legend . content) (make-element "legend" content))
(define (li . content) (make-element "li" content))
(define (main . content) (make-element "main" content))
(define (map . content) (make-element "map" content))
(define (mark . content) (make-element "mark" content))
(define (meta . content) (make-element "meta" content))
(define (meter . content) (make-element "meter" content))
(define (nav . content) (make-element "nav" content))
(define (noframes . content) (make-element "noframes" content))
(define (noscript . content) (make-element "noscript" content))
(define (object . content) (make-element "object" content))
(define (ol . content) (make-element "ol" content))
(define (optgroup . content) (make-element "optgroup" content))
(define (option . content) (make-element "option" content))
(define (output . content) (make-element "output" content))
(define (p . content) (make-element "p" content))
(define (param . content) (make-element "param" content))
(define (picture . content) (make-element "picture" content))
(define (pre . content) (make-element "pre" content))
(define (progress . content) (make-element "progress" content))
(define (q . content) (make-element "q" content))
(define (rp . content) (make-element "rp" content))
(define (rt . content) (make-element "rt" content))
(define (ruby . content) (make-element "ruby" content))
(define (s . content) (make-element "s" content))
(define (samp . content) (make-element "samp" content))
(define (script . content) (make-element "script" content))
(define (section . content) (make-element "section" content))
(define (select . content) (make-element "select" content))
(define (small . content) (make-element "small" content))
(define (source . content) (make-element "source" content))
(define (span . content) (make-element "span" content))
(define (strike . content) (make-element "strike" content))
(define (strong . content) (make-element "strong" content))
(define (style . content) (make-element "style" content))
(define (sub . content) (make-element "sub" content))
(define (summary . content) (make-element "summary" content))
(define (sup . content) (make-element "sup" content))
(define (svg . content) (make-element "svg" content))
(define (table . content) (make-element "table" content))
(define (tbody . content) (make-element "tbody" content))
(define (td . content) (make-element "td" content))
(define (template . content) (make-element "template" content))
(define (textarea . content) (make-element "textarea" content))
(define (tfoot . content) (make-element "tfoot" content))
(define (th . content) (make-element "th" content))
(define (thead . content) (make-element "thead" content))
(define (time . content) (make-element "time" content))
(define (title . content) (make-element "title" content))
(define (tr . content) (make-element "tr" content))
(define (track . content) (make-element "track" content))
(define (tt . content) (make-element "tt" content))
(define (u . content) (make-element "u" content))
(define (ul . content) (make-element "ul" content))
(define (var . content) (make-element "var" content))
(define (video . content) (make-element "video" content))
(define (wbr . content) (make-element "wbr" content))
(define (active element) (pseudo-class element "active"))
(define (any-link element) (pseudo-class element "any-link"))
(define (autofill element) (pseudo-class element "autofill"))
(define (blank element) (pseudo-class element "blank"))
(define (checked element) (pseudo-class element "checked"))
(define (current element) (pseudo-class element "current"))
(define (default element) (pseudo-class element "default"))
(define (defined element) (pseudo-class element "defined"))
(define (disabled element) (pseudo-class element "disabled"))
(define (empty element) (pseudo-class element "empty"))
(define (enabled element) (pseudo-class element "enabled"))
(define (first element) (pseudo-class element "first"))
(define (first-child element) (pseudo-class element "first-child"))
(define (first-of-type element) (pseudo-class element "first-of-type"))
(define (focus element) (pseudo-class element "focus"))
(define (focus-visible element) (pseudo-class element "focus-visible"))
(define (focus-within element) (pseudo-class element "focus-within"))
(define (fullscreen element) (pseudo-class element "fullscreen"))
(define (future element) (pseudo-class element "future"))
(define (host element) (pseudo-class element "host"))
(define (hover element) (pseudo-class element "hover"))
(define (in-range element) (pseudo-class element "in-range"))
(define (indeterminate element) (pseudo-class element "indeterminate"))
(define (invalid element) (pseudo-class element "invalid"))
(define (last-child element) (pseudo-class element "last-child"))
(define (last-of-type element) (pseudo-class element "last-of-type"))
;;(define (left element) (pseudo-class element "left"))
(define (link element) (pseudo-class element "link"))
(define (local-link element) (pseudo-class element "local-link"))
(define (modal element) (pseudo-class element "modal"))
(define (only-child element) (pseudo-class element "only-child"))
(define (only-of-type element) (pseudo-class element "only-of-type"))
(define (optional element) (pseudo-class element "optional"))
(define (out-of-range element) (pseudo-class element "out-of-range"))
(define (past element) (pseudo-class element "past"))
(define (paused element) (pseudo-class element "paused"))
(define (picture-in-picture element) (pseudo-class element "picture-in-picture"))
(define (placeholder-shown element) (pseudo-class element "placeholder-shown"))
(define (playing element) (pseudo-class element "playing"))
(define (read-only element) (pseudo-class element "read-only"))
(define (read-write element) (pseudo-class element "read-write"))
(define (required element) (pseudo-class element "required"))
;; (define (right element) (pseudo-class element "right"))
(define (root element) (pseudo-class element "root"))
(define (scope element) (pseudo-class element "scope"))
(define (target element) (pseudo-class element "target"))
(define (target-within element) (pseudo-class element "target-within"))
(define (valid element) (pseudo-class element "valid"))
(define (visited element) (pseudo-class element "visited"))
(define (after element) (pseudo-element element "after"))
(define (backdrop element) (pseudo-element element "backdrop"))
(define (before element) (pseudo-element element "before"))
(define (cue element) (pseudo-element element "cue"))
(define (cue-region element) (pseudo-element element "cue-region"))
(define (first-letter element) (pseudo-element element "first-letter"))
(define (first-line element) (pseudo-element element "first-line"))
(define (file-selector-button element) (pseudo-element element "file-selector-button"))
(define (grammar-error element) (pseudo-element element "grammar-error"))
(define (marker element) (pseudo-element element "marker"))
(define (placeholder element) (pseudo-element element "placeholder"))
(define (selection element) (pseudo-element element "selection"))
(define (spelling-error element) (pseudo-element element "spelling-error"))
(define (target-text  element) (pseudo-element element "target-text "))
